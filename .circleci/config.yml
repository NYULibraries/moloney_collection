docker-defaults: &docker-defaults
  docker:
    - image: nyulibraries/circleci_docker:18.06.1-ce-git-compose-1.22.0
      environment:
        - IMAGE_NAME=moloney_collection
        - COMPOSE_PROJECT_NAME=moloney_collection
  working_directory: ~/app

auth_quay: &auth_quay
  run:
    name: Authenticate Quay
    command: |
      docker login -u "$QUAY_USERNAME" --password "$QUAY_PASSWORD" quay.io

build_docker: &build_docker
  run:
    name: Build Docker
    command: |
      export BRANCH_NO_SLASH=${CIRCLE_BRANCH//\//_}
      docker-compose build dev
      docker-compose -f docker-compose.build.yml build

pull_docker: &pull_docker
  run:
    name: Pull Docker
    command: |
      export BRANCH_NO_SLASH=${CIRCLE_BRANCH//\//_}
      docker pull quay.io/nyulibraries/${IMAGE_NAME}:${BRANCH_NO_SLASH} || docker pull quay.io/nyulibraries/${IMAGE_NAME}:latest

push_docker: &push_docker
  run:
    name: Push Docker
    command: |
      export BRANCH_NO_SLASH=${CIRCLE_BRANCH//\//_}
      docker push quay.io/nyulibraries/${IMAGE_NAME}:latest
      docker push quay.io/nyulibraries/${IMAGE_NAME}:${BRANCH_NO_SLASH}
      docker push quay.io/nyulibraries/${IMAGE_NAME}:${BRANCH_NO_SLASH}-${CIRCLE_SHA1}

version: 2
jobs:
  deploy-dev:
    <<: *docker-defaults
    steps:
      - setup_remote_docker
      - run:
          name: Deploy into QA via Jenkins
          command: |
            docker run --rm appropriate/curl -u $JENKINS_CI_USERNAME:$JENKINS_CI_API_KEY -X POST https://jenkinsci.library.nyu.edu/job/Moloney%20Collection%20Deploy/buildWithParameters\?GIT_COMMIT\=$CIRCLE_SHA1\&DEPLOY_ENV\=staging

  deploy-prod:
    <<: *docker-defaults
    steps:
      - setup_remote_docker
      - run:
          name: Deploy into production via Jenkins
          command: |
            docker run --rm appropriate/curl -u $JENKINS_CI_USERNAME:$JENKINS_CI_API_KEY -X POST https://jenkinsci.library.nyu.edu/job/Moloney%20Collection%20Deploy/buildWithParameters\?GIT_COMMIT\=$CIRCLE_SHA1\&DEPLOY_ENV\=production

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - deploy-dev:
          filters:
            branches:
              ignore:
                - master
      - deploy-prod:
          filters:
            branches:
              only: master
